<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.project.bling.mapper.adminmapper.ad_userMapper">

	<select id="userCount"  parameterType="String" resultType="int">
		SELECT count(midx) as count
		FROM bg_user
		<if test='_parameter == "S"'> where grade='S'</if>
		<if test='_parameter == "G"'> where grade='G'</if>
		<if test='_parameter == "B"'> where grade='B'</if>
	</select>

	<select id="user_list" parameterType="PageMaker" resultType="UserVO">
	select a.midx,a.uname,a.id,a.grade,a.mileage,a.rdate,a.rdate1,
       sum(c.tot_price) as sum
		from bg_user a
		left join bg_order c
		on a.midx=c.midx
		left join bg_delivery b on c.order_idx = b.order_idx
		where (b.cancel = 'N' or  b.cancel is null) and (b.refund = 'N' or  b.refund is null )
		<if test='grade == "S"'> and grade='S'</if>
		<if test='grade == "G"'> and grade='G'</if>
		<if test='grade == "B"'> and grade='B'</if>
		group by a.midx
		order by a.midx DESC
		Limit #{startPost},#{scri.perPageNum}
	</select>
	
	<update id="update_grade_G">
	<![CDATA[ 	UPDATE bg_user C,
		(select a.midx,a.grade,
		       sum(c.tot_price) as sum
				from bg_user a
				left join bg_order c
				on a.midx=c.midx
				left join bg_delivery b on c.order_idx = b.order_idx
				where (b.cancel = 'N' or  b.cancel is null) and (b.refund = 'N' or  b.refund is null )
				and c.rdate BETWEEN DATE_ADD(NOW(), INTERVAL -1 MONTH ) AND NOW()
				group by a.midx having sum >= 500000) A
		set C.grade = 'G' where C.midx=A.midx
		]]>
	</update>
	
	<update id="update_grade_S">
		<![CDATA[ 
		UPDATE bg_user C,
		(select a.midx,a.grade,
		       sum(c.tot_price) as sum
				from bg_user a
				left join bg_order c
				on a.midx=c.midx
				left join bg_delivery b on c.order_idx = b.order_idx
				where (b.cancel = 'N' or  b.cancel is null) and (b.refund = 'N' or  b.refund is null )
				and c.rdate BETWEEN DATE_ADD(NOW(), INTERVAL -1 MONTH ) AND NOW()
				group by a.midx having sum >= 200000 AND sum < 500000) A
		set C.grade='S' where C.midx=A.midx
		]]>
	</update>
	
	<update id="update_grade_B">
	<![CDATA[ 
		UPDATE bg_user C,
		(select a.midx,a.grade,
		       sum(c.tot_price) as sum
				from bg_user a
				left join bg_order c
				on a.midx=c.midx
				left join bg_delivery b on c.order_idx = b.order_idx
				where (b.cancel = 'N' or  b.cancel is null) and (b.refund = 'N' or  b.refund is null )
				and c.rdate BETWEEN DATE_ADD(NOW(), INTERVAL -1 MONTH ) AND NOW()
				group by a.midx having sum >= 500000) A
		set C.grade = 'G' where C.midx=A.midx
		]]>
		
	</update>
	
</mapper>