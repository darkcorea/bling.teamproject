<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.project.bling.mapper.adminmapper.ad_boardMapper">
	
	<!-- 공지사항 전체 개수 -->
	<select id="listCount" resultType="int">
		SELECT count(nidx)
		FROM bg_notice
		WHERE nidx
	</select>
	
	<!-- 공지사항 옵션 선택 전체 개수 -->
	<select id="listOptionCount" resultType="int" parameterType="String">
		SELECT count(nidx) 
		FROM bg_notice
		WHERE type=#{type}
	</select>
	
	<!-- 공지사항 검색 전체 개수 -->
	<select id="searchcount" resultType="int" parameterType="String">
		SELECT count(nidx) 
		FROM bg_notice
		WHERE subject LIKE CONCAT('%',#{scri.keyword},'%')
	</select>
	
	<!-- 공지사항 전체 리스트 -->
	<select id="totalList" resultType="NoticeVO" parameterType="PageMaker">
		SELECT nidx,subject,rdate,type,imgfile,imges
		FROM bg_notice				   
	   
		<if test="scri.keyword != null">
			WHERE subject LIKE CONCAT('%',#{scri.keyword},'%')
		</if>
		ORDER BY RDATE DESC
		Limit #{startPost}, #{scri.perPageNum}
	</select>

	<!--공지사항 옵션선택 리스트-->
	<select id="optionList" resultType="NoticeVO" parameterType="PageMaker">
		SELECT nidx,subject,rdate,type,imgfile,imges
		FROM bg_notice
		WHERE type=#{type}
		ORDER BY RDATE DESC
		Limit #{startPost}, #{scri.perPageNum}
	</select> 
	
	<!-- 공지사항 데이터 삭제 -->
	<delete id="deleteArr" parameterType="int">
		 DELETE FROM bg_notice WHERE nidx=#{nidx}
	</delete>
	

	<!-- 공지사항 데이터 등록 -->
	<insert id="confirm" parameterType="NoticeVO">
		INSERT INTO bg_notice(subject,contents,type,imgfile,imges)
		VALUES(  
			#{subject}
			,#{contents}
			,#{type}
			,#{imgfile, jdbcType=VARCHAR}
			<if test="imges == null">
			,0
			</if>
			<if test="imges != null">
			,#{imges, jdbcType=VARCHAR}
			</if>
			
		)
	</insert>
	
	<!-- 공지사항 데이터 수정 전 불러오기 (고객 공지사항에도 똑같이 적용가능)(detail)-->
	<select id="sp_detail" resultType="NoticeVO" parameterType="int">
		SELECT * 
		FROM bg_notice
		WHERE nidx=#{nidx}
	</select>
	
	<!-- 공지사항 데이터 수정 -->
	<update id="modify" parameterType="NoticeVO">
		UPDATE bg_notice
		SET subject = #{subject},
			rdate = sysdate(),
			type = #{type},
			contents = #{contents},
			imgfile =#{imgfile, jdbcType=VARCHAR},
			imges=#{imges,jdbcType=VARCHAR}
		WHERE nidx = #{nidx}
	</update>
	
	
	
	<!-- 이벤트 데이터 저장 -->
	<insert id="event_regist" parameterType="EventVO">
		INSERT INTO bg_event(subject,contents,image,banner,event_start,event_end)
		values(
			#{subject}
			,#{contents}
			,#{image, jdbcType=VARCHAR}
			,#{banner, jdbcType=VARCHAR}
			,#{event_start}
			,#{event_end}
		)
	</insert>
	
	<!-- 이벤트 데이터 삭제 -->
	<delete id="deleteArrEvent" parameterType="int">
		 DELETE FROM bg_event WHERE eidx=#{eidx}
	</delete>
	
	<!-- 문의사항 리스트 -->
	<select id="question_list" resultType="QuestionVO">
		SELECT * FROM bg_question ORDER BY originqidx desc, depth asc
	</select>
	
	<!-- order_idx또는 detail_idx로 구매한 상품들 정보 가져 오기 -->
  <select id="question_detail" parameterType="Order_detailVO" resultType="CombineVO">
 	SELECT bp.pidx, bo.recipient, bo.rphone, bo.addr1, bo.addr2, bp.pname, bi.main, bop.oname, 
	  			bod.quantity, bo.payment, bo.tot_price,bo.zip_code,bo.order_idx, bod.detail_idx, a.deli_stat
		FROM bg_order bo
		JOIN bg_order_detail bod ON bo.order_idx = bod.order_idx
		JOIN bg_option bop ON bod.oidx = bop.oidx
		JOIn bg_product bp ON bp.pidx = bop.pidx
		JOIN bg_image bi oN bi.pidx = bp.pidx
	    JOIN bg_delivery a ON a.order_idx=bo.order_idx 
	<if test="order_idx != 0">WHERE bo.order_idx=#{order_idx}</if>
	<if test="detail_idx != 0">WHERE bod.detail_idx=#{detail_idx}</if>
  </select>
  
  <!--  문의사항 답글 작성 -->
  <insert id="question_write" parameterType="QuestionVO">
  	INSERT INTO bg_question (midx,category,title,content,originqidx,depth,state)
  	VALUES(#{midx},#{category},#{title},#{content},#{qidx},1,'Y')
  </insert>
  <!--문의 사항에 답글을 달고 기존 문의에는 답글 달았다는 표시 하기  -->
  <update id="question_state" parameterType="QuestionVO">
 	 UPDATE bg_question SET state='Y' WHERE qidx=#{qidx}
  </update>
  
</mapper>