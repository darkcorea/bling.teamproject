<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.project.bling.mapper.productMapper">
	
	<!-- 반복되는  sql -->
	<sql id="listpage">
		WITH pi
		    AS(
		        SELECT p.pidx,
		               p.pname,
		               p.kind,
		               p.discount,
		               p.price,
		               p.saleprice,
	                   p.rdate,
		               i.main
		        FROM bg_product p
		        LEFT OUTER JOIN bg_image i
		        ON p.pidx=i.pidx
		        where p.saleyn='Y'
		    ),
	    oro
		    AS(
		        SELECT op.pidx,
		               od.quantity,
		               r.ridx
		        FROM bg_Order_detail od
		        
		        RIGHT OUTER JOIN bg_option op
		        ON od.oidx=op.oidx
		        
		        LEFT OUTER JOIN bg_review r
		        ON od.detail_idx=r.detail_idx
		    )
		SELECT pi.pidx,
		       pi.pname,
		       pi.kind,
		       pi.discount,
		       pi.saleprice,
		       pi.price,
		       pi.main,
		       count(oro.ridx) as reviewCount,
		       sum(oro.quantity) as quantitySum,
	           pi.rdate
	
	</sql>
	
	<!-- 상품 총 갯수 -->
	<select id="productCount" resultType="int" parameterType="String">
		SELECT count(pidx) 
		FROM bg_product 
		WHERE kind=#{kind} AND saleyn='Y'
	</select>
	
	<!-- 홈, 상품 리스트에서 같이 쓰는 메퍼-->
	<!-- 베스트 상품  판매량 순 -->
	<select id="prodBest" parameterType="PageMaker" resultType="CombineVO" >
		<include refid="listpage"></include>
			FROM oro
			RIGHT OUTER JOIN pi
			ON oro.pidx=pi.pidx
			GROUP BY pi.pidx,pi.main,pi.kind,pi.pname,pi.discount,pi.saleprice,pi.price,pi.rdate
			ORDER BY sum(oro.quantity)
			DESC nulls last
			Limit #{start}, 9
	</select>
	
	<!-- 새로 올라온 상품 -->
	<select id="prodNew" parameterType="PageMaker" resultType="CombineVO" >
		<include refid="listpage"></include>
			FROM oro
			RIGHT OUTER JOIN pi
			ON oro.pidx=pi.pidx
			GROUP BY pi.pidx,pi.main,pi.kind,pi.pname,pi.discount,pi.saleprice,pi.price,pi.rdate
			ORDER BY pi.rdate
			DESC nulls last
			Limit #{start}, 9
	</select>
	
	<!-- 상품에 대한 리스트 종류별 최신순 -->
	<select id="Scroll_newList" parameterType="PageMaker" resultType="CombineVO" >
		<include refid="listpage"></include>
			FROM oro
			RIGHT OUTER JOIN pi
			ON oro.pidx=pi.pidx
			WHERE pi.kind= #{kind}
			GROUP BY pi.pidx,pi.main,pi.kind,pi.pname,pi.discount,pi.saleprice,pi.price,pi.rdate
			ORDER BY pi.rdate
			DESC nulls last
			Limit #{start}, 9
	</select>
	
	<!-- 베스트 상품 리스트 -->
	<select id="Scroll_bestList" parameterType="PageMaker" resultType="CombineVO" >
		<include refid="listpage"></include>
			FROM oro
			RIGHT OUTER JOIN pi
			ON oro.pidx=pi.pidx
			WHERE pi.kind= #{kind}
			GROUP BY pi.pidx,pi.main,pi.kind,pi.pname,pi.discount,pi.saleprice,pi.price,pi.rdate
			ORDER BY sum(oro.quantity)
			DESC nulls last
			Limit #{start}, 9
	</select>
	
	<!-- 높은가격순 리스트 -->
	<select id="Scroll_highPriceList" parameterType="PageMaker" resultType="CombineVO" >
		<include refid="listpage"></include>
			FROM oro
			RIGHT OUTER JOIN pi
			ON oro.pidx=pi.pidx
			WHERE pi.kind= #{kind}
			GROUP BY pi.pidx,pi.main,pi.kind,pi.pname,pi.discount,pi.saleprice,pi.price,pi.rdate
			ORDER BY pi.saleprice
			DESC nulls last
			Limit #{start}, 9
	</select>
	
	<!-- 낮은가격순 리스트 -->
	<select id="Scroll_rowPriceList" parameterType="PageMaker" resultType="CombineVO" >
		<include refid="listpage"></include>
			FROM oro
			RIGHT OUTER JOIN pi
			ON oro.pidx=pi.pidx
			WHERE pi.kind= #{kind}
			GROUP BY pi.pidx,pi.main,pi.kind,pi.pname,pi.discount,pi.saleprice,pi.price,pi.rdate
			ORDER BY pi.saleprice
			ASC nulls last
			Limit #{start}, 9
	</select>
	
	
	<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
	
	
	
	
	<!-- 상품 디테일에서 쓰는  매퍼-->
	<!-- 상품에 대한 정보 -->
	<select id="detailProduct" parameterType="int" resultType="ProductVO">
		SELECT pidx, pname, kind, price, saleprice, discount
		FROM bg_product
		WHERE pidx = #{pidx} AND saleyn='Y'
	</select>
	
	<!-- 상품 옵션 -->
	<select id="optionsProduct" parameterType="int" resultType="OptionVO">
		SELECT oidx, pidx, oname, addprice, stock
		FROM bg_option
		WHERE pidx = #{pidx} AND saleyn='Y' and delyn='N'
	</select>
	
	<!-- 상품 이미지 -->
	<select id="imageProduct" parameterType="int" resultType="ImageVO">
		SELECT image_idx, pidx, main, detail1, detail2, detail3,
		showing1, showing2, showing3, showing4, showing5  
		FROM bg_image
		WHERE pidx = #{pidx}
	</select>
	
	<!-- 상품 검색 기능에 쓰이는 매퍼 -->
	<select id="search_Product" parameterType="PageMaker" resultType="CombineVO">
	<![CDATA[
	WITH pi
	    AS(
	        SELECT p.pidx,
	               p.pname,
	               p.kind,
	               p.discount,
	               p.price,
	               p.saleprice,
	               i.main,
	               p.saleyn
	        FROM bg_product p
	        LEFT OUTER JOIN bg_image i
	        ON p.pidx=i.pidx
	        where p.saleyn='Y'
	    ),
	oro
	    AS(
	        SELECT op.pidx,
	               od.quantity,
	               r.ridx
	        FROM bg_Order_detail od
	        
	        RIGHT OUTER JOIN bg_option op
	        ON od.oidx=op.oidx
	        
	        LEFT OUTER JOIN bg_review r
	        ON od.detail_idx=r.detail_idx
	    )
	SELECT pi.pidx,
	       pi.pname,
	       pi.kind,
	       pi.discount,
	       pi.saleprice,
	       pi.price,
	       pi.main,
	       count(oro.ridx) as reviewCount,
	       sum(oro.quantity) as quantitySum
	FROM oro
	RIGHT OUTER JOIN pi
	ON oro.pidx=pi.pidx
	where 1=1
	]]>
	
		<if test="scri.keyword != null ">AND pi.pname LIKE '%'||#{scri.keyword}||'%'</if>
		<if test='scri.kind == "R"'>AND pi.kind='R'</if>
		<if test='scri.kind == "E"'>AND pi.kind='E'</if>
		<if test='scri.kind == "N"'>AND pi.kind='N'</if>
		<if test='scri.kind == "B"'>AND pi.kind='B'</if>
		<if test="scri.price == 20000 "> <![CDATA[ AND pi.price <= 20000 ]]></if>
		<if test="scri.price == 50000 "> <![CDATA[ AND pi.price <= 50000 ]]></if>
		<if test="scri.price == 100000 "> <![CDATA[ AND pi.price <= 100000 ]]></if>
		<if test="scri.price == 200000 "> <![CDATA[ AND pi.price <= 200000 ]]></if>
		<if test="scri.price == 300000 "> <![CDATA[ AND pi.price >= 300000 ]]></if>
		<if test="scri.start_price != 0"> <![CDATA[ AND pi.price >= #{scri.start_price} ]]></if>
		<if test="scri.last_price != 0"> <![CDATA[ AND pi.price <= #{scri.last_price} ]]></if>

	<![CDATA[
	GROUP BY pi.pidx,pi.main,pi.kind,pi.pname,pi.discount,pi.saleprice,pi.price
	ORDER BY pi.pidx ASC nulls last
	]]>
	</select>
	
	
</mapper>