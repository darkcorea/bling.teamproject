<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.project.bling.mapper.adminmapper.ad_boardMapper">
	
	<!-- 공지사항 전체 개수 -->
	<select id="listCount" resultType="int">
		SELECT count(nidx)
		FROM bg_notice
		WHERE nidx
	</select>
	
	<!-- 공지사항 옵션 선택 전체 개수 -->
	<select id="listOptionCount" resultType="int" parameterType="String">
		SELECT count(nidx) 
		FROM bg_notice
		WHERE type=#{type}
	</select>
	
	<!-- 공지사항 검색 전체 개수 -->
	<select id="searchcount" resultType="int" parameterType="String">
		SELECT count(nidx) 
		FROM bg_notice
		WHERE subject LIKE CONCAT('%',#{scri.keyword},'%')
	</select>
	
	<!-- 공지사항 전체 리스트 -->
	<select id="totalList" resultType="NoticeVO" parameterType="PageMaker">
		SELECT nidx,subject,rdate,type,imgfile,imges
		FROM bg_notice				   
	   
		<if test="scri.keyword != null">
			WHERE subject LIKE CONCAT('%',#{scri.keyword},'%')
		</if>
		ORDER BY RDATE DESC
		Limit #{startPost}, #{scri.perPageNum}
	</select>

	<!--공지사항 옵션선택 리스트-->
	<select id="optionList" resultType="NoticeVO" parameterType="PageMaker">
		SELECT nidx,subject,rdate,type,imgfile,imges
		FROM bg_notice
		WHERE type=#{type}
		ORDER BY RDATE DESC
		Limit #{startPost}, #{scri.perPageNum}
	</select> 
	
	<!-- 공지사항 데이터 삭제 -->
	<delete id="deleteArr" parameterType="int">
		 DELETE FROM bg_notice WHERE nidx=#{nidx}
	</delete>
	

	<!-- 공지사항 데이터 등록 -->
	<insert id="confirm" parameterType="NoticeVO">
		INSERT INTO bg_notice(subject,contents,type,imgfile,imges)
		VALUES(  
			#{subject}
			,#{contents}
			,#{type}
			,#{imgfile, jdbcType=VARCHAR}
			<if test="imges == null">
			,0
			</if>
			<if test="imges != null">
			,#{imges, jdbcType=VARCHAR}
			</if>
			
		)
	</insert>
	
	<!-- 공지사항 데이터 수정 전 불러오기 (고객 공지사항에도 똑같이 적용가능)(detail)-->
	<select id="sp_detail" resultType="NoticeVO" parameterType="int">
		SELECT * 
		FROM bg_notice
		WHERE nidx=#{nidx}
	</select>
	
	<!-- 공지사항 데이터 수정 -->
	<update id="modify" parameterType="NoticeVO">
		UPDATE bg_notice
		SET subject = #{subject},
			rdate = sysdate(),
			type = #{type},
			contents = #{contents},
			imgfile =#{imgfile, jdbcType=VARCHAR},
			imges=#{imges,jdbcType=VARCHAR}
		WHERE nidx = #{nidx}
	</update>
	
	
	
	<!-- 이벤트 데이터 저장 -->
	<insert id="event_regist" parameterType="EventVO">
		INSERT INTO bg_event(subject,contents,image,banner,event_start,event_end)
		values(
			#{subject}
			,#{contents}
			,#{image, jdbcType=VARCHAR}
			,#{banner, jdbcType=VARCHAR}
			,#{event_start}
			,#{event_end}
		)
	</insert>
	
	<!-- 이벤트 데이터 삭제 -->
	<delete id="deleteArrEvent" parameterType="int">
		 DELETE FROM bg_event WHERE eidx=#{eidx}
	</delete>
	
	
	<!-- 			문의사항		     -->
	
	<!-- 문의 사항 카운트 -->
	<select id="question_count" parameterType="PageMaker" resultType="int">
		SELECT count(*) FROM bg_question WHERE qidx
		<if test='kind == "A"'> AND category='A'</if>
		<if test='kind == "B"'> AND category='B'</if>
		<if test='kind == "C"'> AND category='C'</if>
		<if test='kind == "D"'> AND category='D'</if>
		<if test='kind == "E"'> AND category='E'</if>
		<if test='kind == "F"'> AND category='F'</if>
		<if test='kind == "G"'> AND state='N'</if>
	</select>
	
	
	<!-- 문의사항 리스트 -->
	<select id="question_list" resultType="QuestionVO" parameterType="PageMaker">
		SELECT * FROM bg_question WHERE 1=1
		<if test='kind == "A"'> AND category='A'</if>
		<if test='kind == "B"'> AND category='B'</if>
		<if test='kind == "C"'> AND category='C'</if>
		<if test='kind == "D"'> AND category='D'</if>
		<if test='kind == "E"'> AND category='E'</if>
		<if test='kind == "F"'> AND category='F'</if>
		<if test='kind == "G"'> AND state='N'</if>
		ORDER BY originqidx desc, depth asc
		Limit #{startPost},#{scri.perPageNum}
	</select>
	
	<!-- order_idx또는 detail_idx로 구매한 상품들 정보 가져 오기 -->
  <select id="question_detail" parameterType="Order_detailVO" resultType="CombineVO">
 	SELECT bp.pidx, bo.recipient, bo.rphone, bo.addr1, bo.addr2, bp.pname, bi.main, bop.oname, 
	  			bod.quantity, bo.payment, bo.tot_price,bo.zip_code,bo.order_idx, bod.detail_idx, a.deli_stat, bo.payed_mileage,a.refund
		FROM bg_order bo
		JOIN bg_order_detail bod ON bo.order_idx = bod.order_idx
		JOIN bg_option bop ON bod.oidx = bop.oidx
		JOIn bg_product bp ON bp.pidx = bop.pidx
		JOIN bg_image bi oN bi.pidx = bp.pidx
	    JOIN bg_delivery a ON a.order_idx=bo.order_idx 
	<if test="order_idx != 0">WHERE bo.order_idx=#{order_idx}</if>
	<if test="detail_idx != 0">WHERE bod.detail_idx=#{detail_idx}</if>
  </select>
  
  <!--  문의사항 답글 작성 -->
  <insert id="question_write" parameterType="QuestionVO">
  	INSERT INTO bg_question (midx,category,title,content,originqidx,depth,state)
  	VALUES(#{midx},#{category},#{title},#{content},#{qidx},1,'Y')
  </insert>
  <!--문의 사항에 답글을 달고 기존 문의에는 답글 달았다는 표시 하기  -->
  <update id="question_state" parameterType="QuestionVO">
 	 UPDATE bg_question SET state='Y' WHERE qidx=#{qidx}
  </update>
  
  <!-- 작성한 답글 가져오기, 수정  -->
  <select id="question_modify" parameterType="int" resultType="QuestionVO">
  	SELECT * FROM bg_question WHERE qidx=#{qidx}
  </select>
  
  <!-- 작성한 답글 수정 -->
  <update id="question_modify1" parameterType="QuestionVO">
  	UPDATE bg_question SET title=#{title}, content=#{content} WHERE qidx=#{qidx}
  </update>
  
  <!-- 상문 문의 사항 카운트 -->
	<select id="question_product_count" parameterType="PageMaker" resultType="int">
		SELECT count(*) FROM bg_product_question WHERE pqidx
		<if test='kind == "R"'> AND kind='R'</if>
		<if test='kind == "E"'> AND kind='E'</if>
		<if test='kind == "N"'> AND kind='N'</if>
		<if test='kind == "B"'> AND kind='B'</if>
		<if test='kind == "Z"'> AND state='N'</if>
	</select>
  
  <!-- 상문 문의 리스트 -->
  <select id="question_product_list" parameterType="PageMaker" resultType="Product_QuestionVO">
  	select * from bg_product_question WHERE 1=1
  	<if test='kind == "R"'> AND kind='R'</if>
	<if test='kind == "E"'> AND kind='E'</if>
	<if test='kind == "N"'> AND kind='N'</if>
	<if test='kind == "B"'> AND kind='B'</if>
	<if test='kind == "Z"'> AND state='N'</if>
  	ORDER BY originpqidx desc, depth asc
  	Limit #{startPost},#{scri.perPageNum}
  </select>
  
  <!-- 문의한 상품에 대한 정보 가져오기 -->
  <select id="product_detail" parameterType="int" resultType="CombineVO">
  	SELECT a.pname, a.saleprice, a.kind, b.main, c.oname, c.stock, c.addprice, a.pidx
  	FROM bg_product a
	JOIN bg_image b ON a.pidx=b.pidx
	JOIN bg_option c ON a.pidx=c.pidx
	WHERE a.pidx= #{pidx}
  </select>
  
  <!--  제품 문의사항 답글 작성 -->
  <insert id="question_product_write" parameterType="Product_QuestionVO">
  	INSERT INTO bg_product_question (midx,pidx,title,comments,originpqidx,show_yn,kind,depth,state)
  	VALUES(#{midx},#{pidx},#{title},#{comments},#{pqidx},#{show_yn},#{kind},1,'Y')
  </insert>
  <!--제품 문의 사항에 답글을 달고 기존 문의에는 답글 달았다는 표시 하기  -->
  <update id="question_product_state" parameterType="Product_QuestionVO">
 	 UPDATE bg_product_question SET state='Y' WHERE pqidx=#{pqidx}
  </update>
  
  <!-- 제품 문의 답글 수정 -->
  <update id="question_product_modify" parameterType="Product_QuestionVO">
  	UPDATE bg_product_question SET title=#{title}, comments=#{comments} WHERE pqidx=#{pqidx}
  </update>
  
  <!-- 리뷰 총 갯수와 리뷰 리스트 -->
  <select id="review_count" resultType="int" parameterType="PageMaker">
  	SELECT count(*) FROM bg_review WHERE ridx
  	<if test='kind == "A"'> AND grade=1</if>
	<if test='kind == "B"'> AND grade=2</if>
	<if test='kind == "C"'> AND grade=3</if>
	<if test='kind == "D"'> AND grade=4</if>
	<if test='kind == "E"'> AND grade=5</if>
  </select>
  <select id="review_list" parameterType="PageMaker" resultType="ReviewVO">
  	SELECT a.ridx, a.contents, a.rdate, a.image1, a.image2, a.midx, a.grade, c.pidx
  	FROM bg_review a
	JOIN bg_order_detail b ON a.detail_idx = b.detail_idx
	JOIN bg_option c ON c.oidx = b.oidx
	WHERE 1=1
	<if test='kind == "A"'> AND grade=1</if>
	<if test='kind == "B"'> AND grade=2</if>
	<if test='kind == "C"'> AND grade=3</if>
	<if test='kind == "D"'> AND grade=4</if>
	<if test='kind == "E"'> AND grade=5</if>
	ORDER BY a.ridx desc
  	Limit #{startPost},#{scri.perPageNum}
  </select>
  
  <!-- 리뷰 삭제 -->
  <delete id="review_delete" parameterType="int">
  	DELETE FROM bg_review WHERE ridx=#{ridx}
  </delete>
	  
  <!-- 사용한 마일리지 다시 돌려주기 -->
  <update id="addmileage_user" parameterType="CombineVO">
	  	UPDATE bg_user SET mileage=mileage+#{payed_mileage} where midx=#{midx}
  </update>
  <!--  사용한 마일리지 다시 돌려주는 일이 없어록 0으로 만들기 -->
  <update id="payed_mileage_zero" parameterType="CombineVO">
	 	UPDATE bg_order SET payed_mileage=0 WHERE order_idx=#{order_idx}
  </update>
  
  
</mapper>