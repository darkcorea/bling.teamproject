<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.project.bling.mapper.deliveryMapper">

	<!-- midx로 배송 정보 가져오기 뷰 만들어서 함 -->
	<select id="deivery_list" parameterType="int" resultType="CombineVO">
	<![CDATA[
		SELECT * FROM (
			SELECT ord.order_idx, od.detail_idx, ord.rdate, im.main, pr.pname, op.oname, od.quantity , ord.tot_price,
			de.cancel, de.refund, de.exchange, de.deli_stat, de.order_yn, re.ridx, de.invoice_num, de.confirm_yn
			,COUNT(*) OVER(PARTITION BY ord.order_idx) AS count
			,SUM(od.quantity) OVER(PARTITION BY ord.order_idx) AS quantitySum
		    ,TIMESTAMPDIFF(DAY, de.deli_com, now()) AS date_differ
		    ,ROW_NUMBER() OVER(PARTITION BY ord.order_idx ORDER BY ord.order_idx asc )AS RNUM
			FROM  open_a_2021.BG_ORDER_DETAIL od
			JOIN open_a_2021.bg_order ord ON ord.order_idx = od.order_idx
			JOIN  open_a_2021.bg_option op ON op.oidx = od.oidx
			JOIN  open_a_2021.bg_product pr ON pr.pidx = op.pidx
			JOIN  open_a_2021.BG_IMAGE im ON im.pidx = pr.pidx
			JOIN  open_a_2021.bg_delivery de ON de.order_idx = ord.order_idx
			LEFT OUTER JOIN  open_a_2021.bg_review re ON re.DETAIL_IDX = od.detail_idx
			WHERE ord.midx=#{midx}  AND now() >= date_add(now(), interval -3 month)
			ORDER BY ord.order_idx ASC, od.detail_idx ASC) A
        WHERE RNUM =1
	]]>
	</select>
	  
	 <!-- order_idx로  추가 마일리지가 있는지 계산 --> 
	<select id="addmileage_check" parameterType="int" resultType="int">
		SELECT addmileage FROM bg_order WHERE order_idx=#{order_idx}
	</select>
	  
	 <!-- order_idx로 구매확정 하기 -->
	 <update id="confirm_fn" parameterType="int">
	 	UPDATE bg_delivery SET confirm_yn='Y' WHERE order_idx=#{order_idx}
	 </update>
	 
	 <!-- order_idx로 적립금 0원으로 만들기 -->
	 <update id="addmileage_zero" parameterType="int">
	 	UPDATE bg_order SET addmileage=0 WHERE order_idx=#{order_idx}
	 </update>
	  
	  <!-- addmileage값을 가져와서 회원 마일리지에 더하기ㅡㅑ -->
	  <update id="addmileage_user" parameterType="UserVO">
	  	UPDATE bg_user SET mileage=mileage+#{mileage} where midx=#{midx}
	  </update>
	  
	  <!-- order_idx로 구매한 상품들 정보 가져 오기 -->
	  <select id="order_list" parameterType="int" resultType="CombineVO">
	 	SELECT bp.pidx, bo.recipient, bo.rphone, bo.addr1, bo.addr2, bp.pname, bi.main, bop.oname, 
	  			bod.quantity, bo.payment, bo.tot_price,bo.zip_code,bo.order_idx, re.ridx
		FROM bg_order bo
		JOIN bg_order_detail bod ON bo.order_idx = bod.order_idx
		JOIN bg_option bop ON bod.oidx = bop.oidx
		JOIn bg_product bp ON bp.pidx = bop.pidx
		JOIN bg_image bi oN bi.pidx = bp.pidx
        LEFT OUTER JOIN  bg_review re ON re.DETAIL_IDX = bod.detail_idx
		WHERE bo.order_idx=#{order_idx}
	  </select>
	  
	  
</mapper>