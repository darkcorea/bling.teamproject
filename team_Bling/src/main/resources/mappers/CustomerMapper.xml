<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.project.bling.mapper.customerMapper">

	<!-- 상품 pidx의 문의 총 갯수 -->
	<select id="Prduct_Question_Count" parameterType="int" resultType="int">
		SELECT count(*)  AS questionCount FROM bg_product_question 
		WHERE pidx= #{pidx}
	</select>

	<!-- 상품 디테일에서 pidx로 문의한 내용 가져오기 -->
	<select id="Product_Question" parameterType="PageMaker" resultType="CombineVO">
		<![CDATA[
		SELECT * FROM 
		    ( SELECT rownum as rnum, A.* from
		        (SELECT bq.midx, bq.pqidx, bq.depth, bq.title, bq.comments, bg.uname, bq.rdate, bq.show_yn
				FROM bg_product_question bq
				JOIN bg_user bg ON bq.midx = bg.midx 
				WHERE pidx= #{pidx}
				ORDER BY bq.originpqidx desc, bq.depth asc) A 
		     WHERE rownum <= #{lastPost} ) B
	 	WHERE rnum >= #{startPost}
	 	]]>
	</select>
	  
	<!-- 상품 디테일에서 로그인한 사람중에 문의를 N으로 한사람의 것을 자신은 볼 수 있게 바꾸기 --> 
	<select id="show_check" parameterType="Product_QuestionVO" resultType="Product_QuestionVO">
		SELECT title, comments, depth, pqidx FROM bg_product_question WHERE show_yn='N' AND midx=#{midx} AND pidx=#{pidx}
	</select>  
	 
	 <!-- 상문 문의 하기 내용 등록 -->
	<insert id="product_write" parameterType="Product_QuestionVO" >
		INSERT INTO bg_product_question (pqidx, originpqidx, midx, pidx, title, comments, show_yn,  rdate) 
		VALUES (pqidx_seq.nextval, pqidx_seq.nextval, #{midx}, #{pidx}, #{title}, #{comments}, #{show_yn}, sysdate)
	</insert> 
	
	<!-- pqidx로 문의 내용 가져오기 -->
	<select id="product_question_one" parameterType="int" resultType="Product_QuestionVO">
		SELECT title, comments, pidx, pwd, pqidx FROM bg_product_question WHERE pqidx=#{pqidx}
	</select>
	
	<!-- 문의 내역 수정하기 -->
	<update id="product_modify" parameterType="Product_QuestionVO">
		UPDATE bg_product_question SET title=#{title}, comments=#{comments}, pwd=#{pwd}, rdate=sysdate
		WHERE pqidx = #{pqidx}
	</update>
	
	<!-- 일반문의 하기 midx로 샀던 상품 60일전꺼까지 조회-->
	<select id="product_select" parameterType="int" resultType="CombineVO">
		<![CDATA[
			SELECT pr.PNAME, op.ONAME, im.MAIN, bor.RDATE, od.detail_idx
			FROM bg_order bor 
			JOIN BG_ORDER_DETAIL od ON bor.ORDER_IDX = od.ORDER_IDX
			JOIN bg_option op ON od.oidx = op.oidx
			JOIN bg_product pr ON op.pidx = pr.pidx
			JOIN bg_image im ON pr.pidx = im.pidx
			WHERE midx=#{midx} AND bor.rdate >= to_char(sysdate-60)
		]]>
	</select>
	
	<!-- detail_idx로 상품 이름, 옵션 이름 , detail_idx 조회하기 -->
	<select id="detail_idx_select" parameterType="list" resultType="CombineVO">
		SELECT od.detail_idx, op.oname, pr.pname
		FROM bg_order_detail od
		JOIN bg_option op on od.oidx = op.oidx
		JOIN bg_product pr on op.pidx = pr.pidx 
		WHERE detail_idx in (
		<foreach collection="list" item="item" separator=",">
			#{item}
		</foreach> )
	</select>
	
	<!-- 문의하기에서 문의하기 등록 -->
	<insert id="question_write" parameterType="QuestionVO">
	
		<if test="detail_idx == 0">
		INSERT INTO bg_question (qidx, originqidx, midx, category, title, content, rdate)
		VALUES (qidx_seq.nextval, qidx_seq.nextval, #{midx}, #{category}, #{title}, #{content}, sysdate)
		</if>
		<if test="detail_idx != 0">
		INSERT INTO bg_question (qidx, originqidx, midx, category, title, content, rdate, detail_idx)
		VALUES (qidx_seq.nextval, qidx_seq.nextval, #{midx}, #{category}, #{title}, #{content}, sysdate, #{detail_idx} )
		</if>

	</insert>
	
	<!-- 퀴리문에서  반복  사용되는거  -->
	<sql id="keyword">
		<if test="scri.keyword != null">
		  AND subject LIKE '%'||#{scri.keyword}||'%' OR contents LIKE '%'||#{scri.keyword}||'%'
		 </if>
	</sql>


	<!-- 고객센터 문의하기 총 갯수-->
	<select id="Question_Count" parameterType="PageMaker" resultType="int">
		SELECT count(*) FROM bg_notice WHERE type='Q'
		<include refid="keyword"></include>
	</select>
	
	
	<!-- 고객센터 페이징 -->
	<select id="Question_page" parameterType="PageMaker" resultType="NoticeVO">
	<![CDATA[
		SELECT * FROM
			(SELECT rownum AS rnum, A.* FROM
				(SELECT nidx, subject, contents, rdate FROM bg_notice WHERE type='Q'
	]]>			
		 <include refid="keyword"></include>
		 
	<![CDATA[			
				) A
			WHERE rownum <= #{lastPost} ) B
		WHERE rnum >= #{startPost}
	 	]]>
	 	
	</select> 
	
</mapper>